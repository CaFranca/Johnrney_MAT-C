[gd_scene load_steps=41 format=3 uid="uid://dkvqd5oa7u7n1"]

[ext_resource type="Texture2D" uid="uid://211we30a2e3o" path="res://assets/sprites/Player_sprites/idle.png" id="2_mdl7e"]
[ext_resource type="Texture2D" uid="uid://cuwa1qjt7g2yn" path="res://assets/sprites/Player_sprites/death.png" id="3_mdl7e"]
[ext_resource type="Texture2D" uid="uid://blui8uvbrxhcl" path="res://assets/sprites/Player_sprites/run.png" id="3_qu4a1"]

[sub_resource type="GDScript" id="GDScript_4kuee"]
script/source = "extends CharacterBody2D  # Este script controla um personagem 2D que se move e pula

# Constantes para controlar o movimento
const SPEED = 200.0        # Velocidade de movimento no eixo X e Y
const JUMP_HEIGHT = 50     # Altura máxima que o pulo pode alcançar
const JUMP_SPEED = 150.0   # Velocidade com que o personagem sobe e desce no pulo

# Variável que aponta para o nó de animação
@onready var animation := $AnimatedSprite2D

# Variáveis que controlam o estado do pulo
var is_jumping := false           # Informa se o personagem está pulando
var jump_start_y := 0             # Armazena a posição inicial do pulo (Y)
var jump_peak_reached := false   # Define se o topo do pulo foi alcançado
var jump_velocity := 0           # Velocidade vertical controlada manualmente para o pulo

func _physics_process(delta: float) -> void:
	# Entrada de movimento horizontal: usa as setas ou WASD
	var direction_x := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction_x == 0:  # Se as setas não forem pressionadas, verifica A e D
		direction_x = -1 if Input.is_key_pressed(KEY_A) else 1 if Input.is_key_pressed(KEY_D) else 0

	# Entrada de movimento vertical: usa as setas ou WASD
	var direction_y := Input.get_axis(\"ui_up\", \"ui_down\")
	if direction_y == 0:  # Se as setas não forem pressionadas, verifica W e S
		direction_y = -1 if Input.is_key_pressed(KEY_W) else 1 if Input.is_key_pressed(KEY_S) else 0

	var jump := Input.is_action_just_pressed(\"ui_accept\")  # Detecta se a tecla de pulo foi pressionada (por padrão, Enter ou espaço)

	# Início do pulo
	if jump and not is_jumping:
		is_jumping = true
		jump_start_y = position.y              # Armazena a altura inicial
		jump_peak_reached = false              # Ainda não atingiu o topo
		jump_velocity = -JUMP_SPEED            # Começa subindo
		animation.play(\"Jump\")                 # Toca a animação de pulo

	# Controle do pulo (subida e descida)
	if is_jumping:
		position.y += jump_velocity * delta    # Aplica o movimento vertical manual
		if not jump_peak_reached:
			# Verifica se chegou ao topo do pulo ou colidiu com o teto
			if position.y <= jump_start_y - JUMP_HEIGHT or is_on_ceiling():
				jump_peak_reached = true       # Atingiu o ponto máximo
				jump_velocity = JUMP_SPEED     # Começa a descer
		else:
			# Verifica se voltou ao solo ou colidiu com o chão
			if position.y >= jump_start_y or is_on_floor():
				position.y = jump_start_y      # Corrige a posição vertical
				is_jumping = false             # Termina o pulo
				jump_velocity = 0              # Zera a velocidade vertical

	# Movimento horizontal
	if direction_x != 0:
		velocity.x = direction_x * SPEED
		$AnimatedSprite2D.flip_h = direction_x < 0  # Vira o sprite para a direção correta
	else:
		velocity.x = 0

	# Movimento vertical (só funciona se não estiver pulando)
	if not is_jumping:
		velocity.y = direction_y * SPEED
	else:	velocity.y = 0  # Impede que o direcional interfira durante o pulo

	# Controle das animações com base no movimento
	if not is_jumping:
		if direction_x != 0:
			animation.play(\"Run\")            # Correndo na horizontal
		elif direction_y < 0:
			animation.play(\"Run_Up\")         # Correndo para cima
		elif direction_y > 0:
			animation.play(\"Run_Down\")       # Correndo para baixo
		else:
			animation.play(\"Idle\")           # Parado

	move_and_slide()  # Aplica o movimento com colisão integrada
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_cd2k1"]
radius = 12.0
height = 24.0

[sub_resource type="AtlasTexture" id="AtlasTexture_mdl7e"]
atlas = ExtResource("3_mdl7e")
region = Rect2(240, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_khinc"]
atlas = ExtResource("3_mdl7e")
region = Rect2(320, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_bruh7"]
atlas = ExtResource("3_mdl7e")
region = Rect2(400, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_abqjs"]
atlas = ExtResource("2_mdl7e")
region = Rect2(0, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_63cyx"]
atlas = ExtResource("2_mdl7e")
region = Rect2(80, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_cfjex"]
atlas = ExtResource("2_mdl7e")
region = Rect2(160, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_gn8i0"]
atlas = ExtResource("2_mdl7e")
region = Rect2(240, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_qu4a1"]
atlas = ExtResource("3_mdl7e")
region = Rect2(0, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_70d11"]
atlas = ExtResource("3_mdl7e")
region = Rect2(80, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_cw2d6"]
atlas = ExtResource("3_mdl7e")
region = Rect2(160, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_si16d"]
atlas = ExtResource("3_qu4a1")
region = Rect2(560, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_sfssh"]
atlas = ExtResource("3_qu4a1")
region = Rect2(480, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_fy5ud"]
atlas = ExtResource("3_qu4a1")
region = Rect2(400, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_4jtfw"]
atlas = ExtResource("3_qu4a1")
region = Rect2(320, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_yqe22"]
atlas = ExtResource("3_qu4a1")
region = Rect2(240, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_6kx34"]
atlas = ExtResource("3_qu4a1")
region = Rect2(160, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_apqp6"]
atlas = ExtResource("3_qu4a1")
region = Rect2(80, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_yk2eu"]
atlas = ExtResource("3_qu4a1")
region = Rect2(0, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_oev5t"]
atlas = ExtResource("3_qu4a1")
region = Rect2(0, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_kj78w"]
atlas = ExtResource("3_qu4a1")
region = Rect2(80, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_63228"]
atlas = ExtResource("3_qu4a1")
region = Rect2(160, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_vfdlt"]
atlas = ExtResource("3_qu4a1")
region = Rect2(240, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_yi6jf"]
atlas = ExtResource("3_qu4a1")
region = Rect2(320, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_luwoi"]
atlas = ExtResource("3_qu4a1")
region = Rect2(400, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_qub4u"]
atlas = ExtResource("3_qu4a1")
region = Rect2(480, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_msbv2"]
atlas = ExtResource("3_qu4a1")
region = Rect2(560, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_wo6fo"]
atlas = ExtResource("3_qu4a1")
region = Rect2(560, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_q84vp"]
atlas = ExtResource("3_qu4a1")
region = Rect2(480, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_53qhv"]
atlas = ExtResource("3_qu4a1")
region = Rect2(400, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_oh2ad"]
atlas = ExtResource("3_qu4a1")
region = Rect2(320, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_o7vwb"]
atlas = ExtResource("3_qu4a1")
region = Rect2(240, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_a7tmr"]
atlas = ExtResource("3_qu4a1")
region = Rect2(160, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_py6rc"]
atlas = ExtResource("3_qu4a1")
region = Rect2(80, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_a5snj"]
atlas = ExtResource("3_qu4a1")
region = Rect2(0, 160, 80, 80)

[sub_resource type="SpriteFrames" id="SpriteFrames_abqjs"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_mdl7e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_khinc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bruh7")
}],
"loop": true,
"name": &"Fall",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_abqjs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_63cyx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cfjex")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gn8i0")
}],
"loop": true,
"name": &"Idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qu4a1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_70d11")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cw2d6")
}],
"loop": true,
"name": &"Jump",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_si16d")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sfssh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fy5ud")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4jtfw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yqe22")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6kx34")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_apqp6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yk2eu")
}],
"loop": true,
"name": &"Run",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_oev5t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kj78w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_63228")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vfdlt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_yi6jf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_luwoi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qub4u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_msbv2")
}],
"loop": true,
"name": &"Run_Down",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wo6fo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_q84vp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_53qhv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_oh2ad")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_o7vwb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a7tmr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_py6rc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a5snj")
}],
"loop": true,
"name": &"Run_Up",
"speed": 12.0
}]

[node name="CharacterBody2D" type="CharacterBody2D"]
position = Vector2(-113, -660)
script = SubResource("GDScript_4kuee")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(114, 646)
shape = SubResource("CapsuleShape2D_cd2k1")

[node name="animation" type="AnimationPlayer" parent="."]
root_node = NodePath("../CollisionShape2D")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
position = Vector2(115, 647)
sprite_frames = SubResource("SpriteFrames_abqjs")
animation = &"Idle"

[node name="camera2D" type="Camera2D" parent="."]
position = Vector2(114, 601)
zoom = Vector2(1.5, 1.5)
limit_smoothed = true
position_smoothing_enabled = true
drag_horizontal_enabled = true
drag_left_margin = 0.5
drag_right_margin = 0.5
editor_draw_limits = true
editor_draw_drag_margin = true
